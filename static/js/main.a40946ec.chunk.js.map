{"version":3,"sources":["components/Searchbar/Searchbar.js","services/pixabay-api.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Button/Button.js","components/Loader/Loader.js","components/ImageGallery/ImageGallery.js","components/Modal/Modal.js","App.js","index.js"],"names":["Searchbar","onSubmit","useState","imageName","setImageName","className","e","preventDefault","trim","toLowerCase","toast","error","toastId","type","autoComplete","autoFocus","placeholder","value","onChange","event","currentTarget","Config","api","fetchImage","searchQuery","page","axios","get","then","response","status","data","Promise","reject","Error","ImageGalleryItem","src","alt","source","data-source","Button","onClick","Loader","color","height","width","Status","ImageGallery","toggleModal","images","setImages","totalHits","setTotalHits","setError","setStatus","setPage","useEffect","handleRequest","nextPage","pixabayAPI","hits","state","pageSmoothScroll","catch","finally","window","scrollTo","top","document","documentElement","scrollHeight","behavior","message","showError","length","target","isOpen","dataset","map","tags","webformatURL","largeImageURL","shortid","generate","info","Modal","modalImg","modalAlt","addEventListener","handleKeyDown","removeEventListener","code","handleClose","App","setSearchQuery","showModal","setShowModal","setModalImg","setModalAlt","closeOnClick","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a40946ec.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\n\nexport default function Searchbar({ onSubmit }) {\n  const [imageName, setImageName] = useState('');\n\n  const handleNameChange = event => {\n    setImageName(event.currentTarget.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (imageName.trim() === '') {\n      toast.error('Пустое поле поиска.', { toastId: 'searchbar' });\n      return;\n    }\n\n    onSubmit(imageName.toLowerCase());\n    setImageName('');\n  };\n\n  return (\n    <header className=\"Searchbar\" onSubmit={handleSubmit}>\n      <form className=\"SearchForm\">\n        <input\n          className=\"SearchForm-input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          value={imageName}\n          onChange={handleNameChange}\n        />\n\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","import axios from 'axios';\n\nconst Config = {\n  KEY: '19294514-cad9d9492229c8304ad27e22b',\n  PER_PAGE: 10,\n};\n\nfunction fetchImage(searchQuery, page = 1) {\n  return axios\n    .get(\n      `https://pixabay.com/api/?q=${searchQuery}&page=${page}&key=${Config.KEY}&image_type=photo&orientation=horizontal&per_page=${Config.PER_PAGE}`,\n    )\n    .then(response => {\n      if (response.status === 200) {\n        return response.data;\n      }\n\n      return Promise.reject(new Error(`Images are not found.`));\n    });\n}\n\nconst api = {\n  fetchImage,\n};\n\nexport default api;\n","import PropTypes from 'prop-types';\n\nexport default function ImageGalleryItem({ src, alt, source }) {\n  return (\n    <li className=\"ImageGalleryItem\">\n      <img\n        className=\"ImageGalleryItem-image\"\n        src={src}\n        alt={alt}\n        data-source={source}\n      />\n    </li>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  source: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport default function Button({ onClick }) {\n  return (\n    <button type=\"button\" className=\"Button\" onClick={onClick}>\n      Load more\n    </button>\n  );\n}\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport ReactLoader from 'react-loader-spinner';\n\nexport default function Loader() {\n  return <ReactLoader type=\"Puff\" color=\"#00BFFF\" height={100} width={100} />;\n}\n","import 'react-toastify/dist/ReactToastify.css';\nimport { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport pixabayAPI from '../../services/pixabay-api';\nimport ImageGalleryItem from '../ImageGalleryItem';\nimport LoadMoreButton from '../Button';\nimport Loader from '../Loader';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nexport default function ImageGallery({ searchQuery, toggleModal }) {\n  const [images, setImages] = useState([]);\n  const [totalHits, setTotalHits] = useState(0);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState(Status.IDLE);\n  const [page, setPage] = useState(1);\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n\n    setPage(1);\n    setStatus(Status.PENDING);\n    handleRequest(searchQuery);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchQuery]);\n\n  useEffect(() => {\n    if (page === 1) {\n      return;\n    }\n\n    setStatus(Status.PENDING);\n    handleRequest(searchQuery, page);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [page]);\n\n  const handleRequest = (searchQuery, nextPage = 1) => {\n    pixabayAPI\n      .fetchImage(searchQuery, nextPage)\n      .then(({ hits, totalHits }) => {\n        if (nextPage > 1) {\n          setImages(state => [...state, ...hits]);\n        } else {\n          setImages(hits);\n        }\n\n        setTotalHits(totalHits);\n        setStatus(Status.RESOLVED);\n        pageSmoothScroll();\n      })\n      .catch(error => {\n        setError(error);\n        setStatus(Status.REJECTED);\n      })\n      .finally(() => {\n        setStatus(Status.IDLE);\n      });\n  };\n\n  const handleLoadMoreBtn = () => {\n    setPage(state => state + 1);\n  };\n\n  const handleModal = e => {\n    if (e.target !== e.currentTarget) {\n      toggleModal({\n        isOpen: true,\n        src: e.target.dataset.source,\n        alt: e.target.alt,\n      });\n    }\n  };\n\n  const pageSmoothScroll = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  const showError = error => {\n    toast.error(error.message, { toastId: 'error' });\n  };\n\n  const showInfo = () => {\n    toast.info('Images are not found.', { toastId: 'resolved' });\n  };\n\n  if (status === Status.PENDING) {\n    return <Loader />;\n  }\n\n  if (status === Status.REJECTED) {\n    showError(error);\n  }\n\n  if (status === Status.RESOLVED || status === Status.IDLE) {\n    if (!images.length && status !== Status.IDLE) {\n      showInfo();\n      return null;\n    }\n\n    return (\n      <>\n        <ul className=\"ImageGallery\" onClick={handleModal}>\n          {images.map(({ tags, webformatURL, largeImageURL }) => (\n            <ImageGalleryItem\n              key={shortid.generate()}\n              src={webformatURL}\n              alt={tags}\n              source={largeImageURL}\n            />\n          ))}\n        </ul>\n\n        {images.length < totalHits && (\n          <LoadMoreButton onClick={handleLoadMoreBtn} />\n        )}\n      </>\n    );\n  }\n\n  return null;\n}\n\nImageGallery.propTypes = {\n  searchQuery: PropTypes.string.isRequired,\n  toggleModal: PropTypes.func.isRequired,\n};\n","import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Modal({ toggleModal, modalImg, modalAlt }) {\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      handleClose();\n    }\n  };\n\n  const handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      handleClose();\n    }\n  };\n\n  const handleClose = () => {\n    toggleModal({\n      isOpen: false,\n      src: '',\n      alt: '',\n    });\n  };\n\n  return (\n    <div className=\"Overlay\" onClick={handleBackdropClick}>\n      <div className=\"Modal\">\n        <img src={modalImg} alt={modalAlt} />\n      </div>\n    </div>\n  );\n}\n\nModal.propTypes = {\n  toggleModal: PropTypes.func.isRequired,\n  modalImg: PropTypes.string.isRequired,\n  modalAlt: PropTypes.string.isRequired,\n};\n","import './App.css';\nimport { useState } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport Modal from './components/Modal';\n\nexport default function App() {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [showModal, setShowModal] = useState(false);\n  const [modalImg, setModalImg] = useState('');\n  const [modalAlt, setModalAlt] = useState('');\n\n  const onSubmit = searchQuery => {\n    setSearchQuery(searchQuery);\n  };\n\n  const toggleModal = ({ isOpen, src, alt }) => {\n    setShowModal(isOpen);\n    setModalImg(src);\n    setModalAlt(alt);\n  };\n\n  return (\n    <div className=\"App\">\n      <ToastContainer closeOnClick autoClose={2000} />\n\n      <Searchbar onSubmit={onSubmit} />\n\n      <ImageGallery searchQuery={searchQuery} toggleModal={toggleModal} />\n\n      {showModal && (\n        <Modal\n          toggleModal={toggleModal}\n          modalImg={modalImg}\n          modalAlt={modalAlt}\n        />\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './index.css';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}